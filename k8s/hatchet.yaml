# Hatchet Lite Kubernetes Deployment
# Based on https://docs.hatchet.run/self-hosting/docker-compose (hatchet-lite)
# Simplified single-container deployment without RabbitMQ
# Secrets are created separately via kubectl to avoid committing credentials
# kubectl create secret generic hatchet-secrets -n devbox \
#   --from-literal=database-url="postgres://..." \
#   --from-literal=encryption-key="$(openssl rand -hex 32)"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hatchet-config
  namespace: devbox
data:
  DATABASE_POSTGRES_PORT: "5432"
  DATABASE_POSTGRES_HOST: "postgres-ha.database.svc.cluster.local"
  SERVER_AUTH_COOKIE_DOMAIN: "localhost"
  SERVER_AUTH_COOKIE_INSECURE: "t"
  SERVER_GRPC_BIND_ADDRESS: "0.0.0.0"
  SERVER_GRPC_INSECURE: "t"
  SERVER_GRPC_BROADCAST_ADDRESS: "hatchet-lite:7077"
  SERVER_GRPC_PORT: "7077"
  SERVER_URL: "http://hatchet-lite:8888"
  SERVER_AUTH_SET_EMAIL_VERIFIED: "t"
  SERVER_DEFAULT_ENGINE_VERSION: "V1"
---
# Hatchet Lite Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hatchet-lite
  namespace: devbox
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hatchet-lite
  template:
    metadata:
      labels:
        app: hatchet-lite
    spec:
      containers:
      - name: hatchet-lite
        image: ghcr.io/hatchet-dev/hatchet/hatchet-lite:latest
        ports:
        - containerPort: 8888
        - containerPort: 7077
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: hatchet-secrets
              key: database-url
        - name: SERVER_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: hatchet-secrets
              key: encryption-key
        envFrom:
        - configMapRef:
            name: hatchet-config
        livenessProbe:
          httpGet:
            path: /
            port: 8888
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8888
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: hatchet-lite
  namespace: devbox
spec:
  selector:
    app: hatchet-lite
  ports:
  - name: web
    port: 8888
    targetPort: 8888
  - name: grpc
    port: 7077
    targetPort: 7077
---
# Optional: Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hatchet-ingress
  namespace: devbox
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: hatchet.devbox.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: hatchet-lite
            port:
              number: 8888